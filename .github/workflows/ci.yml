name: Continuous Integration
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

env:
  CONTAINER_REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}

jobs:
  check:
    name: Check
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: make install
      - run: make lint test
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            build/coverage/*
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    name: Build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        os: [linux]
        arch: [amd64,arm64,arm]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - uses: docker/setup-buildx-action@v3
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install deps
        run: make install

      - name: Set env vars (push)
        run: |
          echo "BUILD_VERSION=0.0.0-beta+commit.${{ github.sha }}" >> $GITHUB_ENV
          echo "CONTAINER_TAG=beta" >> $GITHUB_ENV
        if: github.event_name == 'push'
      - name: Set env vars (pr)
        run: |
          echo "BUILD_VERSION=0.0.0-pr${{ github.event.pull_request.number }}+commit.${{ github.sha }}" >> $GITHUB_ENV
          echo "CONTAINER_TAG=pr${{ github.event.pull_request.number }}" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'
      - name: Set env vars (release)
        run: |
          echo "BUILD_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          echo "CONTAINER_TAG=latest" >> $GITHUB_ENV
        if: github.event_name == 'release'

      - name: Build
        run: make build/gomp-${{ matrix.os }}-${{ matrix.arch }}-$(BUILD_VERSION).tar.gz

      # - name: Publish container image (release)
      #   run: make docker CONTAINER_TAG=${{ github.event.release.tag_name }}
      #   if: github.event_name == 'release'

      - uses: actions/upload-artifact@v4
        with:
          name: gomp-${{ matrix.os }}-${{ matrix.arch }}-$(BUILD_VERSION).tar.gz
          path: build/gomp-${{ matrix.os }}-${{ matrix.arch }}-$(BUILD_VERSION).tar.gz
      - uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          files: build/gomp-${{ matrix.os }}-${{ matrix.arch }}-$(BUILD_VERSION).tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
