apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: gomp
    tier: frontend
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: gomp
    tier: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: gomp
    tier: database
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: gomp
    tier: database
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data
  labels:
    app: gomp
    tier: frontend
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgsql
  labels:
    app: gomp
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gomp
spec:
  selector:
    matchLabels:
      app: gomp
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: gomp
        tier: frontend
    spec:
      containers:
        - name: web
          image: ghcr.io/chadweimer/gomp
          env:
            - name: DATABASE_URL
              value: postgres://gomp:dbpassword@db/gomp?sslmode=disable
            - name: SECURE_KEY
              value: UpdateMe
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-gomp
spec:
  selector:
    matchLabels:
      app: gomp
      tier: database
  replicas: 1
  template:
    metadata:
      labels:
        app: gomp
        tier: database
    spec:
      containers:
        - name: db
          image: postgres:alpine
          env:
            - name: POSTGRES_PASSWORD
              value: dbpassword
            - name: POSTGRES_USER
              value: gomp
          ports:
            - containerPort: 5432
              name: pgsql
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pgsql
