{{ define "css-recipe/list" }}
<style>
    .compact-image {
        box-sizing: initial;
        width: 32px;
        height: 32px;
        vertical-align: middle;
        padding: 5px;
    }
    .pagination li {
        transform: scale(1.33);
    }
    .pagination li i {
        transform: scale(1.25);
    }
}
</style>
{{ end }}

{{ define "content-recipe/list" }}
<section class="row">
    <div class="col s12 l12">
        <div class="section">
            <span class="light left">
                Search: '<span id="search-query"></span>', Results: <span id="result-count"></span>
            </span>
            <span class="right">
                <a id="recipe-list-menu-button" href="#!" data-activates="recipe-list-menu" class="button-collapse show-on-large">
                    <i class="material-icons black-text">menu</i>
                </a>
                <form>
                    <ul id="recipe-list-menu" class="side-nav collapsible flex-container" data-collapsible="expandable">
                        <li>
                            <a class="btn waves-effect" href="?reset=">Reset</a>
                        </li>
                        <li>
                            <span class="collapsible-header active">Display</span>
                            <ul class="collapsible-body">
                                <li id="full-view-item">
                                    <a href="?view=full"><i class="material-icons">view_agenda</i> Full</a>
                                </li>
                                <li id="compact-view-item">
                                    <a href="?view=compact"><i class="material-icons">view_headline</i> Compact</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <span class="collapsible-header active">Sort</span>
                            <ul class="collapsible-body">
                                <li id="name-sort-item">
                                    <a>
                                        <i class="material-icons">sort_by_alpha</i> Name
                                    </a>
                                </li>
                                <li id="rating-sort-item">
                                    <a>
                                        <i class="material-icons">star_rate</i> Rating
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <span class="collapsible-header active">Filter by Tag</span>
                            <button class="btn-flat waves-effect header-btn" type="submit">Apply</button>
                        </li>
                        <li class="indented fill">
                            <ul id="tag-filter-list"></ul>
                        </li>
                    </ul>
                </form>
            </span>
        </div>
    </div>

    <div class="pagination-container"></div>

    <div id="recipes-container">
        <div class="progress">
            <div class="indeterminate"></div>
        </div>
    </div>

    <div class="pagination-container"></div>

</section>
<section class="fixed-action-btn">
    <a href="{{RootUrlPath}}/new" class="btn-floating btn-large waves-effect green">
        <i class="material-icons">add</i>
    </a>
</section>
{{ end }}

{{define "js-recipe/list"}}
<script type="text/javascript">
    $(document).ready(function(){
        var reset = getQueryString('reset');
        if (reset != null) {
            sessionStorage.clear();
        }

        var pageNum = parseInt(getQueryString('page'));
        if (pageNum == null || isNaN(pageNum)) {
            pageNum = 1;
        }

        var query = getQueryStringWithStorageBacking('q', '');
        var searchTags = getQueryStringWithStorageBacking('tags', [], true).filter(v => v != '');
        var sortBy = getQueryStringWithStorageBacking('sort', 'name');
        var sortDir = getQueryStringWithStorageBacking('dir', 'asc');
        var viewType = getQueryStringWithStorageBacking('view', 'full');

        $('#search-query').append(query);
        $('#' + sortBy + '-sort-item').addClass('active');
        $('#' + viewType + '-view-item').addClass('active');
        $('#name-sort-item > a').attr('href', '?sort=name&dir=' + (sortBy != 'name' || sortDir == 'desc' ? 'asc' : 'desc'));
        $('#rating-sort-item > a').attr('href', '?sort=rating&dir=' + (sortBy == 'rating' && sortDir == 'desc' ? 'asc' : 'desc'));
        $('#recipe-list-menu-button').sideNav({
            edge: 'right'
        });
        
        loadRecipes($('#recipes-container'), viewType, {
            q: query,
            tags: searchTags,
            sort: sortBy,
            dir: sortDir,
            page: pageNum,
            count: (viewType != 'compact' ? 12 : 60),
        });

        loadTags(searchTags, {
            sort: "tag",
            dir: "asc",
            count: Number.MAX_SAFE_INTEGER,
        });
    });

    function loadRecipes($container, viewType, searchFilter) {
        getRecipesAsync('{{RootUrlPath}}', searchFilter).done(function(response) {
            $('#result-count').append(response.total);

            $container.empty();

            if (response.recipes != null) {
                if (viewType != 'compact') {
                    addRecipesFull($container, response.recipes);
                } else {
                    addRecipesCompact($container, response.recipes);
                }
            }

            var numPages = Math.ceil(response.total / searchFilter.count);
            addPaginiation(searchFilter.page, numPages);
        });
    }

    function addRecipesFull($container, recipes) {
        recipes.forEach(function(recipe) {
            var $recipeWrapper = $('\
                <div class="col s12 m6 l4"></div>');
            var $recipeContent = '\
                <div class="card small grey lighten-4 hoverable clickable"\
                    onclick="location.href = \'{{RootUrlPath}}/recipes/' + recipe.id + '\';"\
                    title="' + recipe.name +'">';
            if (recipe.mainImage.thumbnailUrl != '') {
                $recipeContent += '\
                    <div class="card-image">\
                        <img src="' + recipe.mainImage.thumbnailUrl + '" class="darken-10">\
                    </div>';
            }
            $recipeContent += '\
                    <div class="rating-container">\
                        <span class="star whole" data-rating="5"><i class="material-icons">star</i></span>\
                        <span class="star half" data-rating="4.5"><i class="material-icons">star</i></span>\
                        <span class="star whole" data-rating="4"><i class="material-icons">star</i></span>\
                        <span class="star half" data-rating="3.5"><i class="material-icons">star</i></span>\
                        <span class="star whole" data-rating="3"><i class="material-icons">star</i></span>\
                        <span class="star half" data-rating="2.5"><i class="material-icons">star</i></span>\
                        <span class="star whole" data-rating="2"><i class="material-icons">star</i></span>\
                        <span class="star half" data-rating="1.5"><i class="material-icons">star</i></span>\
                        <span class="star whole" data-rating="1"><i class="material-icons">star</i></span>\
                        <span class="star half" data-rating="0.5"><i class="material-icons">star</i></span>\
                    </div>\
                    <div class="card-content truncate">\
                        <span class="card-title">' + recipe.name + '</span>\
                    </div>\
                </div>';
            $recipeWrapper.append($recipeContent);
            $container.append($recipeWrapper);
            $recipeWrapper.find('.star[data-rating="' + recipe.averageRating + '"]').addClass('active');
        });
    }

    function addRecipesCompact($container, recipes) {
        var columnizedRecipes = splitArray(recipes, 4);
        columnizedRecipes.forEach(function(innerRecipes) {
            var $innerContainer = $('<div class="col s12 m6 l3"></div>');
            $container.append($innerContainer);

            innerRecipes.forEach(function(recipe) {
                var $recipeWrapper = $('\
                    <div class="col s12 l12"></div>');
                var $recipeContent = '\
                    <a href="{{RootUrlPath}}/recipes/' + recipe.id + '" class="truncate" title="' + recipe.name + '">\
                        <img class="compact-image circle">\
                        <span>' + recipe.name + '</span>\
                    </a>';
                $recipeWrapper.append($recipeContent);
                $innerContainer.append($recipeWrapper);
                if (recipe.mainImage.thumbnailUrl != '') {
                    $recipeWrapper.find('img').attr('src', recipe.mainImage.thumbnailUrl);
                }
            });
        });
    }

    function addPaginiation(pageNum, numPages) {
        prevPageNum = pageNum - 1;
        nextpageNum = pageNum + 1;
        $('.pagination-container').append('\
            <ul class="pagination no-padding col s12 l12 center">\
                <li class="' + (pageNum == 1 ? 'disabled' : '') + '">\
                    <a href="' + (pageNum > 1 ? '?page=1' : '#!') + '"><i class="material-icons">first_page</i></a>\
                </li>\
                <li class="' + (pageNum == 1 ? 'disabled' : '') + '">\
                    <a href="' + (pageNum > 1 ? '?page=' + prevPageNum : '#!') + '"><i class="material-icons">chevron_left</i></a>\
                </li>\
                <li class="active">\
                    <a href="#!">' + pageNum + '</a>\
                </li>\
                <li class="' + (pageNum == numPages ? 'disabled' : '') + '">\
                    <a href="' + (pageNum < numPages ? '?page=' + nextpageNum : '#!') + '"><i class="material-icons">chevron_right</i></a>\
                </li>\
                <li class="' + (pageNum == numPages ? 'disabled' : '') + '">\
                    <a href="' + (pageNum < numPages ? '?page=' + numPages : '#!') + '"><i class="material-icons">last_page</i></a>\
                </li>\
            </ul>');
    }

    function loadTags(searchTags, tagsFilter) {
        getTagsAsync('{{RootUrlPath}}', tagsFilter).done(function(tags){
            if (tags != null) {
                tags.forEach(function(tag){
                    $('#tag-filter-list').append('\
                    <li>\
                        <input id="' + tag + '-tag" name="tags" type="checkbox" value="' + tag + '"' + (searchTags.includes(tag) ? ' checked' : '') + '>\
                        <label for="' + tag + '-tag">' + tag + '</label>\
                    </li>');
                });
            }
        });
    }

    function splitArray(items, numSplits) {
        var splitCount = Math.ceil(items.length / numSplits)

        var newArrays = [[]];
        var index = 0

        for (i = 0; i < items.length; i++) {
            if (i >= (index + 1) * splitCount) {
                newArrays.push([]);
                index++;
            }
            newArrays[index].push(items[i]);
        }

        return newArrays;
    }
</script>
{{end}}
